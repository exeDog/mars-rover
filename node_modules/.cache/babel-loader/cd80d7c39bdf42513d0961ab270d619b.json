{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\priyank\\\\Desktop\\\\mars-rover\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\priyank\\\\Desktop\\\\mars-rover\\\\src\\\\Rover.js\";\nimport React, { useState } from 'react';\n\nconst Rover = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        commands = _useState2[0],\n        setCommands = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        commandsToExecute = _useState4[0],\n        setCommandsToExecute = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        execute = _useState6[0],\n        setExecute = _useState6[1];\n\n  const _useState7 = useState('00N'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        startPosition = _useState8[0],\n        setStartPosition = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        test = _useState10[0],\n        setTest = _useState10[1];\n\n  let startValue = '';\n\n  const addCommand = e => {\n    setCommands(commands + e.target.value);\n  };\n\n  const runSample = e => {\n    setCommands(e.target.value);\n  };\n\n  const executeFunction = () => {\n    let startPosition = startValue;\n\n    if (/^[0-4][0-4][NEWS]$/.test(startPosition)) {\n      setExecute(true);\n      setCommandsToExecute(commands);\n      setStartPosition(startPosition);\n    } else {\n      alert('Invalid Move');\n    }\n  };\n\n  const clear = () => {\n    setCommands('');\n    setExecute(false);\n    setCommandsToExecute('');\n  };\n\n  const validateStartPosition = e => {\n    e.target.checkValidity();\n  };\n\n  const stopExecute = () => {\n    setExecute(false);\n  };\n\n  let position = startPosition;\n  position = position.split('').join(' ');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n};\n\nexport default Rover;","map":{"version":3,"sources":["C:\\Users\\priyank\\Desktop\\mars-rover\\src\\Rover.js"],"names":["React","useState","Rover","commands","setCommands","commandsToExecute","setCommandsToExecute","execute","setExecute","startPosition","setStartPosition","test","setTest","startValue","addCommand","e","target","value","runSample","executeFunction","alert","clear","validateStartPosition","checkValidity","stopExecute","position","split","join"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,KAAK,GAAI,MAAM;AAAA,oBACiBD,QAAQ,CAAC,EAAD,CADzB;AAAA;AAAA,QACTE,QADS;AAAA,QACCC,WADD;;AAAA,qBAEmCH,QAAQ,CAAC,EAAD,CAF3C;AAAA;AAAA,QAETI,iBAFS;AAAA,QAEUC,oBAFV;;AAAA,qBAGeL,QAAQ,CAAC,KAAD,CAHvB;AAAA;AAAA,QAGTM,OAHS;AAAA,QAGAC,UAHA;;AAAA,qBAI2BP,QAAQ,CAAC,KAAD,CAJnC;AAAA;AAAA,QAITQ,aAJS;AAAA,QAIMC,gBAJN;;AAAA,qBAKQT,QAAQ,CAAC,CAAD,CALhB;AAAA;AAAA,QAKVU,IALU;AAAA,QAKJC,OALI;;AAMjB,MAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACpBX,IAAAA,WAAW,CAACD,QAAQ,GAAGY,CAAC,CAACC,MAAF,CAASC,KAArB,CAAX;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAGH,CAAC,IAAI;AACnBX,IAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC1B,QAAIV,aAAa,GAAGI,UAApB;;AACA,QAAI,qBAAqBF,IAArB,CAA0BF,aAA1B,CAAJ,EAA8C;AAC1CD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,oBAAoB,CAACH,QAAD,CAApB;AACAO,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACH,KAJD,MAIO;AACHW,MAAAA,KAAK,CAAC,cAAD,CAAL;AACH;AACJ,GATD;;AAWA,QAAMC,KAAK,GAAG,MAAM;AAChBjB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACH,GAJD;;AAMA,QAAMgB,qBAAqB,GAAGP,CAAC,IAAI;AAC/BA,IAAAA,CAAC,CAACC,MAAF,CAASO,aAAT;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBhB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFD;;AAIA,MAAIiB,QAAQ,GAAGhB,aAAf;AACAgB,EAAAA,QAAQ,GAAGA,QAAQ,CAACC,KAAT,CAAe,EAAf,EAAmBC,IAAnB,CAAwB,GAAxB,CAAX;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAQH,CApDD;;AAsDA,eAAezB,KAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst Rover  = () => {\r\n    const [ commands, setCommands ] = useState('');\r\n    const [ commandsToExecute, setCommandsToExecute ] = useState('');\r\n    const [ execute, setExecute ] = useState(false);\r\n    const [ startPosition, setStartPosition ] = useState('00N');\r\n    const[ test, setTest ] = useState(0);\r\n    let startValue = '';\r\n\r\n    const addCommand = e => {\r\n        setCommands(commands + e.target.value);\r\n    };\r\n\r\n    const runSample = e => {\r\n        setCommands(e.target.value);\r\n    };\r\n\r\n    const executeFunction = () => {\r\n        let startPosition = startValue;\r\n        if (/^[0-4][0-4][NEWS]$/.test(startPosition)) {\r\n            setExecute(true);\r\n            setCommandsToExecute(commands);\r\n            setStartPosition(startPosition);\r\n        } else {\r\n            alert('Invalid Move');\r\n        }\r\n    };\r\n\r\n    const clear = () => {\r\n        setCommands('');\r\n        setExecute(false);\r\n        setCommandsToExecute('');\r\n    };\r\n\r\n    const validateStartPosition = e => {\r\n        e.target.checkValidity();\r\n    };\r\n\r\n    const stopExecute = () => {\r\n        setExecute(false);\r\n    };\r\n\r\n    let position = startPosition;\r\n    position = position.split('').join(' ');\r\n\r\n    return <div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n};\r\n\r\nexport default Rover;\r\n"]},"metadata":{},"sourceType":"module"}